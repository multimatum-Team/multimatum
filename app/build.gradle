plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'

}

apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.github.multimatum_team.multimatum"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.github.multimatum_team.multimatum.MultimatumTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    testCoverage {
        jacocoVersion = "0.8.7"
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-auth:21.0.3'
    implementation 'com.firebaseui:firebase-ui-auth:8.0.1'
    implementation 'com.google.android.gms:play-services-auth:20.1.0'
    implementation 'com.google.android.gms:play-services-base:18.0.1'
    implementation 'com.google.firebase:firebase-inappmessaging:20.1.2'
    implementation 'com.google.dagger:hilt-android:2.41'
    implementation platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.6.0")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation 'com.hudomju:swipe-to-dismiss-undo:1.0'
    kapt 'com.google.dagger:hilt-android-compiler:2.41'
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt 'androidx.lifecycle:lifecycle-compiler:2.4.1'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    testImplementation 'io.mockk:mockk:1.12.3'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
    testImplementation ('androidx.test.espresso:espresso-contrib:3.4.0'){
        exclude module: "protobuf-lite"
    }
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

    //implementation for the QRCode Generator
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.google.zxing:core:3.4.1'

    // Hilt testing dependencies, taken from https://developer.android.com/training/dependency-injection/hilt-testing
    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.41")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.41")
    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.41")
    // ...with Kotlin.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.41")

    // Mockito
    androidTestImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    androidTestImplementation 'org.mockito:mockito-core:4.4.0'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.28.1'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
    jacoco.includes = ["com.application.*"]
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled true
        html.enabled true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            // Exclude Hilt generated classes
            '**/*Hilt*.*',
            'hilt_aggregated_deps/**',
            '**/*_Factory.class',
            '**/*_MembersInjector.class'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))

    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/*/coverage.ec'
    ]))
}

connectedCheck {
    finalizedBy jacocoTestReport
}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
